const express = require('express');
const path = require('path');
const cors = require('cors');
const helmet = require('helmet');
const compression = require('compression');
const rateLimit = require('express-rate-limit');
require('dotenv').config();

const weatherRoutes = require('./routes/weather');
const { initDatabase } = require('./models/database');
const { errorHandler, notFound } = require('./middleware/errorHandler');

const app = express();
const PORT = process.env.PORT || 3000;

// ะะฝะธัะธะฐะปะธะทะฐัะธั ะฑะฐะทั ะดะฐะฝะฝัั
initDatabase().catch(console.error);

// Middleware ะดะปั ะฑะตะทะพะฟะฐัะฝะพััะธ
app.use(helmet({
  contentSecurityPolicy: {
    directives: {
      defaultSrc: ["'self'"],
      styleSrc: ["'self'", "'unsafe-inline'"],
      scriptSrc: ["'self'", "'unsafe-inline'"],
      connectSrc: ["'self'", "https://api.open-meteo.com", "https://geocoding-api.open-meteo.com"],
      imgSrc: ["'self'", "data:", "https:"],
    },
  },
}));

// CORS ะฝะฐัััะพะนะบะธ
app.use(cors({
  origin: process.env.NODE_ENV === 'production' 
    ? ['http://localhost:3000'] 
    : true,
  credentials: true
}));

// ะกะถะฐัะธะต ะพัะฒะตัะพะฒ
app.use(compression());

// Rate limiting
const limiter = rateLimit({
  windowMs: 15 * 60 * 1000, // 15 ะผะธะฝัั
  max: 100, // ะผะฐะบัะธะผัะผ 100 ะทะฐะฟัะพัะพะฒ ั ะพะดะฝะพะณะพ IP
  message: {
    error: 'ะกะปะธัะบะพะผ ะผะฝะพะณะพ ะทะฐะฟัะพัะพะฒ ั ะฒะฐัะตะณะพ IP, ะฟะพะฟัะพะฑัะนัะต ะฟะพะทะถะต.'
  }
});

app.use('/api/', limiter);

// ะะฐััะธะฝะณ JSON
app.use(express.json({ limit: '10mb' }));
app.use(express.urlencoded({ extended: true, limit: '10mb' }));

// ะกัะฐัะธัะตัะบะธะต ัะฐะนะปั
app.use(express.static(path.join(__dirname, '../public')));

// API ะผะฐัััััั
app.use('/api', weatherRoutes);

// Health check
app.get('/health', (req, res) => {
  res.status(200).json({ 
    status: 'OK', 
    timestamp: new Date().toISOString(),
    uptime: process.uptime()
  });
});

// ะะปะฐะฒะฝะฐั ัััะฐะฝะธัะฐ
app.get('/', (req, res) => {
  res.sendFile(path.join(__dirname, '../public/index.html'));
});

// ะะฑัะฐะฑะพัะบะฐ ะพัะธะฑะพะบ
app.use(notFound);
app.use(errorHandler);

// Graceful shutdown
process.on('SIGINT', () => {
  console.log('ะะพะปััะตะฝ ัะธะณะฝะฐะป SIGINT, ะทะฐะฒะตััะตะฝะธะต ัะฐะฑะพัั...');
  process.exit(0);
});

process.on('SIGTERM', () => {
  console.log('ะะพะปััะตะฝ ัะธะณะฝะฐะป SIGTERM, ะทะฐะฒะตััะตะฝะธะต ัะฐะฑะพัั...');
  process.exit(0);
});

// ะะฐะฟััะบ ัะตัะฒะตัะฐ
if (require.main === module) {
  app.listen(PORT, '0.0.0.0', () => {
    console.log(`๐ค๏ธ  Weather App ะทะฐะฟััะตะฝ ะฝะฐ ะฟะพััั ${PORT}`);
    console.log(`๐ ะัะบัะพะนัะต http://localhost:${PORT} ะฒ ะฑัะฐัะทะตัะต`);
    console.log(`๐ Health check: http://localhost:${PORT}/health`);
  });
}

module.exports = app;